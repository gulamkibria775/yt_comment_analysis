# name: CICD Pipeline

# on:
#   push:
#     branches: [main]  # or your preferred branch

# jobs:
#   model-pipeline:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v3

#     - name: Set up Python
#       uses: actions/setup-python@v4
#       with:
#         python-version: '3.10'

#     - name: Cache pip dependencies
#       uses: actions/cache@v3
#       with:
#         path: ~/.cache/pip
#         key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
#         restore-keys: |
#           ${{ runner.os }}-pip-

#     - name: Install dependencies
#       run: |
#         pip install --upgrade pip
#         pip install -r requirements.txt
    
#     - name: Set MLflow tracking URI (local logging)
#       run: |
#        echo "MLFLOW_TRACKING_URI=file://$(pwd)/mlruns" >> $GITHUB_ENV


#     # - name: Reproduce DVC Pipeline
#     #   run: |
#     #     dvc repro

#     - name: Commit and Push DVC and Git Changes
#       run: |
#         git config --global user.name "github-actions[bot]"
#         git config --global user.email "github-actions[bot]@users.noreply.github.com"
#         git add .
#         git commit -m "Auto: Update pipeline artifacts" || echo "No changes to commit"
#         git push origin ${{ github.ref_name }}

#     # - name: Run Pytest (unit tests)
#     #   run: |
#     #     pip install pytest
#     #     pytest scripts/test_load_model.py || exit 1
#     #     pytest scripts/test_model_signature.py || exit 1
#     #     pytest scripts/test_model_performance.py || exit 1

#     - name: Register model to local MLflow
#       run: |
#         python src/model/register_model.py


name: CICD Pipeline

on: 
  push:
    branches:
      - main  # or your main branch name

jobs:
  run-dvc-pipeline:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install dvc
      - name: Start MLflow Tracking Server
        run: |
          mlflow server --backend-store-uri sqlite:///mlflow.db --default-artifact-root ./mlruns --host 0.0.0.0 --port 5001 &
          sleep 10  # wait a bit for server to start
    

      - name: Run DVC pipeline
        run: dvc repro

      - name: Commit and push changes (if any)
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git diff --cached --quiet || (git commit -m "CI: Update DVC outputs [skip ci]" && git push)
